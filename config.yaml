log:
  level: debug
  disable_sentry: true

db:
  url: db_url

amqp:
  topic: "slack"
  unverified: "unverified-svc"
  orchestrator: "orchestrator"
  identity: "identity"
  publisher: "amqp://guest:guest@localhost:5672/" #slack_publisher
  subscriber: "amqp://guest:guest@localhost:5672/" #slack_receiver

slack:
  # User OAuth token starts with 'xoxp'
  # Required permissions: 
  # - admin
  # - channels:read
  # - groups:read
  # - im:read
  # - mpim:read
  # - team:read
  # - users.profile:read
  # - users:read
  user_oauth_token: user_token

  # User Bot OAuth token starts with 'xoxb'
  # Required permissions: 
  # - channels:read
  # - groups:read
  # - team.billing:read
  # - team:read
  # - usergroups:read
  # - users.profile:read
  # - users:read
  # - users:read.email
  bot_user_oauth_token: bot_token

runners:
  registrar: 10m
  worker: 60m
  receiver: 30s
  sender: 30s

rate_limit:
  requests_amount: 50 
  # when you use bill, you should set this value to '20
  time_limit: 1m

listener:
  addr: :9000

registrator:
  outer_url: "http://localhost:80/integrations/orchestrator/modules" #endpoint to register MODULE
  inner_url: "http://localhost:9000/integrations/slack" #endpoint to MODULE itself
  topic: "slack" #MODULE topic
  title: "Slack" #MODULE title
  prefix: "+"
  is_module: true

cop:
  disabled: true
  endpoint: "http://..."
  upstream: "http://..."
  service_name: slack_client-module-svc
  service_port: 80
